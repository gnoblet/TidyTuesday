{
  "hash": "f437ff118b280c85497cb7cbceb44aec",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Crane Observations at Lake Hornborgasjön, Sweden (1994–2024)\"\nsubtitle: \"TidyTuesday 2025-10-01\"\ndate: \"2025-10-01\"\nauthor: \"gnoblet\"\ncategories: [r, ggplot2, ggbranding, lubridate]\nimage: \"week_39.png\"\n---\n\n## Dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get data\nlibrary(tidytuesdayR)\ndat <- tt_load(\"2025-09-30\")\ndat <- dat$cranes\n\n# Load other required libraries\nlibrary(ggplot2)\nlibrary(ggbranding) # to add personal branding to plots, NOT ON CRAN yet see github.com/gnoblet/ggbranding\nlibrary(dplyr) # for data manipulation\nlibrary(showtext) # for custom fonts\nlibrary(sysfonts) # for custom fonts\nlibrary(ggtext) # for rich text annotations\nlibrary(lubridate) # for date manipulation\nlibrary(viridis) # for color scales\n```\n:::\n\n\n## Analysis\n\n### Data Preparation\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add a month and year column using lubridate\ndat <- dat |>\n  mutate(\n    month = month(date),\n    year = year(date),\n    day = day(date),\n    day_of_year = yday(date),\n    day_month = paste0(sprintf(\"%02d\", month), \"-\", sprintf(\"%02d\", day)),\n    day_month_label = paste0(month.abb[month], \" \", day)\n  )\n\n# keep only spring months (Feb to May)\ndat_spring <- dat |>\n  filter(month %in% 2:5) |>\n  mutate(\n    # Create a sequential day within spring season for better x-axis\n    spring_day = case_when(\n      month == 2 ~ day,\n      month == 3 ~ day + 29,\n      month == 4 ~ day + 60,\n      month == 5 ~ day + 90\n    )\n  )\n\n# Earliest day of year for spring migration\n# when did the earliest observation occur?\nearliest_obs <- dat_spring |>\n  arrange(spring_day) %>%\n  slice(1)\n# Prepare annotation text\nearliest_obs_text <- paste0(\n  \"Earliest cranes observed\\n in \",\n  earliest_obs$year,\n  \" on \",\n  earliest_obs$day_month_label\n)\n\n# Day with the highest number of cranes\nmax_obs <- dat_spring |>\n  arrange(desc(observations)) |>\n  slice(1)\nmax_obs_text <- paste0(\n  scales::comma(max_obs$observations),\n  \" peak number of cranes\\n\",\n  \" observed on \",\n  max_obs$day_month_label,\n  \" in \",\n  max_obs$year\n)\nmax_obs_day <- max_obs$spring_day\n\n# Text for explaining what each tile is\n# appear at the top left of the plot so min of year 2024\nexp_obs <- dat_spring |>\n  filter(year == 2024) |>\n  arrange(spring_day) |>\n  slice(1)\nexp_obs_text <- \"Each tile is the number of cranes observed\\non a given day. Empty dark tiles mean that\\nweather conditions were not suitable\\nfor observation on that day.\"\n\n# Subtitle text to pass to ggtext\ntitle_text <- \"Spring Crane Migration Occur Earlier\"\nsubtitle_text <- \"For more than 30 years (1994-2024), cranes stopping at the Lake Hornborgasjön ('Lake Hornborga') in Västergötland, Sweden have been counted from the Hornborgasjön field station in the spring and the fall as they pass by during their yearly migration.\"\n```\n:::\n\n\n## Visualization\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fonts\nfont_add_google(\"Roboto Condensed\", \"Roboto Condensed\")\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n# Create breaks for x-axis (every two weeks approximately)\nspring_breaks <- c(46, 61, 75, 92)\nspring_labels <- c(\n  \"Mar 15\",\n  \"Apr 1\",\n  \"Apr 15\",\n  \"May 1\"\n)\n\n# Spring migration tile plot with dark theme and ggplot2 4.0 features\np_spring <- ggplot() +\n  # horizontal line every 5 years\n  geom_segment(\n    data = data.frame(\n      y = seq(1995, 2024, by = 5),\n      xmin = 31,\n      xmax = 95\n    ),\n    aes(x = xmin, xend = xmax, y = y),\n    color = \"white\",\n    linewidth = 0.4\n  ) +\n  geom_text(\n    data = data.frame(\n      y = seq(1995, 2024, by = 5),\n      x = 96,\n      label = seq(1995, 2024, by = 5)\n    ),\n    aes(x = x, y = y, label = label),\n    color = \"white\",\n    size = 4.5,\n    hjust = 0\n  ) +\n  geom_tile(\n    data = dat_spring,\n    aes(x = spring_day, y = year, fill = observations),\n    linewidth = 0.1,\n    colour = \"white\",\n  ) +\n  scale_fill_viridis_c(\n    name = \"# of Crane\\nObservations\",\n    trans = \"sqrt\",\n    labels = scales::comma_format(),\n    option = \"plasma\",\n    na.value = \"#0a0a0aff\"\n  ) +\n  scale_x_continuous(\n    limits = c(19, 105),\n    breaks = spring_breaks,\n    labels = spring_labels,\n    expand = c(0, 2)\n  ) +\n  scale_y_continuous(\n    limits = c(1994, 2030),\n    breaks = c(1994, 2024),\n    expand = c(0, 1)\n  ) +\n  labs(\n    title = title_text,\n    subtitle = subtitle_text,\n    x = NULL,\n    y = NULL\n  ) +\n  # Add annotation for earliest 2007 data point\n  annotate(\n    \"curve\",\n    x = 28,\n    y = 2004,\n    xend = 33,\n    yend = 2007,\n    curvature = -0.3,\n    arrow = arrow(length = unit(0.01, \"npc\"), type = \"closed\"),\n    color = \"white\",\n    size = 0.5\n  ) +\n  annotate(\n    \"text\",\n    x = 22,\n    y = 2002.5,\n    label = earliest_obs_text,\n    hjust = 0,\n    vjust = 0.5,\n    color = \"white\",\n    size = 5,\n    family = \"Roboto Condensed\"\n  ) +\n  # Add annotation for max observation\n  annotate(\n    \"curve\",\n    x = 85,\n    y = 2025,\n    xend = max_obs_day,\n    yend = max_obs$year,\n    curvature = 0.2,\n    arrow = arrow(length = unit(0.01, \"npc\"), type = \"closed\"),\n    color = \"white\",\n    size = 0.5\n  ) +\n  annotate(\n    \"text\",\n    x = 103,\n    y = 2025.4,\n    label = max_obs_text,\n    hjust = 1,\n    vjust = 0.5,\n    color = \"white\",\n    size = 5,\n    family = \"Roboto Condensed\"\n  ) +\n  # Add annotation for explanation of tiles\n  annotate(\n    \"text\",\n    x = 19,\n    y = 2029,\n    label = exp_obs_text,\n    hjust = 0,\n    vjust = 1,\n    color = \"white\",\n    size = 5,\n    family = \"Roboto Condensed\"\n  ) +\n  # Using ggplot2 4.0 theme features\n  theme_void(base_family = \"Roboto Condensed\") +\n  theme(\n    # Dark background theme using new ggplot2 4.0 approach\n    plot.background = element_rect(fill = \"#0a0a0a\", colour = NA),\n    panel.background = element_rect(fill = \"#0a0a0a\", colour = NA),\n\n    # Title styling with white text\n    plot.title = element_textbox_simple(\n      size = 26,\n      face = \"bold\",\n      colour = \"white\",\n      hjust = 0,\n      margin = margin(t = 20, b = 10, l = 30, r = 30)\n    ),\n    plot.subtitle = element_textbox_simple(\n      size = 18,\n      colour = \"white\",\n      hjust = 0,\n      margin = margin(b = 30, l = 30, r = 30),\n      width = unit(0.9, \"npc\")\n    ),\n    axis.text.x = element_text(\n      colour = \"white\",\n      size = 14,\n      hjust = 1\n    ),\n    # Legend styling\n    legend.text = element_text(colour = \"white\", size = 14),\n    legend.title = element_text(colour = \"white\", size = 14, face = \"bold\", ),\n    legend.position = \"top\",\n    legend.key.height = unit(0.4, \"cm\"),\n    legend.key.width = unit(3, \"cm\"),\n    legend.margin = margin(t = 15, b = 20),\n\n    # Using new margin system from ggplot2 4.0\n    plot.margin = margin(30, 20, 30, 20)\n  ) +\n  # Add branded footer using ggbranding\n  add_branding(\n    github = \"gnoblet\",\n    bluesky = \"@gnoblet\",\n    icon_color = \"white\",\n    text_color = \"white\",\n    additional_text = \"Data: TidyTuesday 29 Sept 2025\",\n    additional_text_color = \"white\",\n    caption_margin = margin(t = 40, b = 10),\n    line_spacing = 2L,\n    icon_size = \"14pt\",\n    text_size = \"14pt\",\n    caption_halign = 0.5\n  )\n```\n:::\n\n\n## Save Plot\n  \n\n::: {.cell}\n\n```{.r .cell-code}\n# Display and save the plot\nggsave(\n  \"week_39.png\",\n  p_spring,\n  width = 11,\n  height = 13,\n  dpi = 300\n)\n```\n:::\n\n\n![](week_39.png)",
    "supporting": [
      "week_39_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}